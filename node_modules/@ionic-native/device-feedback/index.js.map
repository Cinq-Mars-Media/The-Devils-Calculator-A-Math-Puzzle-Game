{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/device-feedback/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiDpC,kCAAiB;;;;IACnD;;OAEG;;;;IAEH,iCAAQ;;;mBAAW;IAEnB;;;OAGG;;;;;IAEH,+BAAM;;;;cAAC,IAAY,KAAU;IAE7B;;;OAGG;;;;;IAEH,0CAAiB;;;;;QACf,MAAM,CAAC;KACR;;gBAtBF,UAAU;;;QAKR,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;kDACL;;QAMlB,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;gDACK;;QAM5B,OAAO,EAAE;;;;2DAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IArBU,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,qCAAqC;YAC7C,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,2CAA2C;YACjD,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,cAAc,EAsB1B;yBAxED;EAkDoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface DeviceFeedbackEnabled {\n  /** Haptic Feedback */\n  haptic: boolean;\n\n  /** Acoustic Feedback */\n  acoustic: boolean;\n}\n\n/**\n * @name Device Feedback\n * @description\n *\n * Plugin that lets you provide haptic or acoustic feedback on Android devices.\n *\n * @usage\n * ```typescript\n * import { DeviceFeedback } from '@ionic-native/device-feedback';\n *\n * constructor(private deviceFeedback: DeviceFeedback) { }\n *\n * ...\n *\n *\n * this.deviceFeedback.acoustic();\n *\n * this.deviceFeedback.haptic(0);\n *\n * this.deviceFeedback.isFeedbackEnabled().then(feedback => {\n *     console.log(feedback);\n *     // {\n *     //   acoustic: true,\n *     //   haptic: true\n *     // }\n *   });\n *\n * ```\n * @innterfaces\n * DeviceFeedbackEnabled\n */\n@Plugin({\n  pluginName: 'DeviceFeedback',\n  plugin: 'cordova-plugin-velda-devicefeedback',\n  pluginRef: 'plugins.deviceFeedback',\n  repo: 'https://github.com/VVelda/device-feedback',\n  platforms: ['Android']\n})\n@Injectable()\nexport class DeviceFeedback extends IonicNativePlugin {\n  /**\n   * Provide sound feedback to user, nevertheless respect user's settings and current active device profile as native feedback do.\n   */\n  @Cordova({ sync: true })\n  acoustic(): void {}\n\n  /**\n   * Provide vibrate feedback to user, nevertheless respect user's tactile feedback setting as native feedback do.\n   * @param {number} type Specify type of vibration feedback. 0 for long press, 1 for virtual key, or 3 for keyboard tap.\n   */\n  @Cordova({ sync: true })\n  haptic(type: number): void {}\n\n  /**\n   * Check if haptic and acoustic feedback is enabled by user settings.\n   * @returns {Promise<DeviceFeedbackEnabled>}\n   */\n  @Cordova()\n  isFeedbackEnabled(): Promise<DeviceFeedbackEnabled> {\n    return;\n  }\n}\n"]}